# Generated by Django 5.0.4 on 2025-06-05 23:59

import datetime
import uuid
from django.db import migrations, models


def create_default_delivery_methods(apps, schema_editor):
    """
    При выполнении миграции добавляем в справочник три базовых способа доставки.
    """
    DeliveryMethod = apps.get_model('notify', 'DeliveryMethod')
    initial = [
        {'code': 'email', 'name': 'Email'},
        {'code': 'sms',   'name': 'SMS'},
        {'code': 'push',  'name': 'Push-уведомление'},
    ]
    for item in initial:
        DeliveryMethod.objects.get_or_create(
            code=item['code'],
            defaults={'name': item['name']}
        )


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DeliveryMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Уникальный код метода доставки, например "email".', max_length=20, unique=True, verbose_name='Method code')),
                ('name', models.CharField(help_text='Читабельное имя, например "Email".', max_length=50, verbose_name='Method name')),
            ],
            options={
                'verbose_name': 'delivery method',
                'verbose_name_plural': 'delivery methods',
                'db_table': 'notify"."delivery_method',
            },
        ),
        migrations.CreateModel(
            name='OutgoingMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique UUID for tracking notifications in services', primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Title of the message', max_length=255, verbose_name='Message title')),
                ('body', models.TextField(help_text='Text of the message (HTML or plain text)', verbose_name='Message body')),
                ('user_ids', models.TextField(blank=True, help_text='UUIDs of users separated by commas, without spaces', verbose_name='User UUID list')),
                ('to_all_users', models.BooleanField(default=False, help_text='If enabled, the recipients field is ignored', verbose_name='Send to all users')),
                ('execution_at', models.DateTimeField(default=datetime.datetime(2025, 6, 6, 0, 0, 14, 6774, tzinfo=datetime.timezone.utc), help_text='When the Notify_worker should process this message', verbose_name='Execution at (date/time)')),
                ('success', models.BooleanField(default=False, help_text='True if the external service responded with 200 OK', verbose_name='Successfully sent to Notify_API')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('delivery_methods', models.ManyToManyField(help_text='Select one or more shipping methods.', related_name='messages', to='notify.deliverymethod', verbose_name='Delivery methods')),
            ],
            options={
                'verbose_name': 'message for mailing list',
                'verbose_name_plural': 'messages for mailing list',
                'db_table': 'notify"."outgoing_message',
                'ordering': ('-created_at',),
            },
        ),
        migrations.RunPython(
            create_default_delivery_methods,
            reverse_code=migrations.RunPython.noop
        ),
    ]
